openapi: 3.0.0
info:
    title: TicTactics API
    version: 1.0.0
    description: "TicTactics API"
tags:
    - name: auth
      description: Authorization Service
    - name: users
      description: User Management Service
    - name: game
      description: Game Management Service
paths:
    /signup:
        post:
            operationId: SignUp
            tags:
                - auth
            summary: Create new user
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SignUpRequest'
            responses:
                '200':
                    description: OK
                default:
                    description: Unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
    /signin:
        post:
            operationId: SignIn
            tags:
                - auth
            summary: Sign in
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SignInRequest'
            responses:
                '200':
                    description: OK
                    headers:
                        Set-Cookie:
                            schema:
                                type: string
                                description: Session cookie
                '401':
                    description: Invalid credentials
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UnauthorizedError'
                default:
                    description: Unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
    /signout:
        delete:
            operationId: SignOut
            tags:
                - auth
            summary: Sign out
            security:
                - cookieAuth: []
            responses:
                '200':
                    description: OK
                '401':
                    description: Access token is missing or invalid
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UnauthorizedError'
                default:
                    description: Unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
    /deleteAccount:
        delete:
            operationId: DeleteAccount
            tags:
                - auth
            summary: Delete account
            security:
                - cookieAuth: []
            responses:
                '200':
                    description: OK
                '401':
                    description: Access token is missing or invalid
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UnauthorizedError'
                default:
                    description: Unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
    /users/list:
        get:
            operationId: GetUsers
            tags:
                - users
            summary: Get users with a given name
            parameters:
              - in: query
                name: name
                schema:
                    type: string
            security:
                - cookieAuth: []
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/UserData'
                '401':
                    description: Access token is missing or invalid
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UnauthorizedError'
                default:
                    description: Unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
    /games/create:
        post:
            operationId: CreateGame
            tags:
                - game
            summary: Create new game
            security:
                - cookieAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateGameRequest'
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Game'
                default:
                    description: Unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
    /games/list:
        get:
            operationId: ListGames
            tags:
                - game
            summary: List games
            security:
                - cookieAuth: []
            parameters:
              - in: query
                name: gameFilter
                schema:
                    $ref: '#/components/schemas/GameFilter'
              - in: query
                name: queryLimit
                schema:
                    type: number
                    minimum: 1
                    maximum: 10
              - in: query
                name: queryCursor
                schema:
                    type: string
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListGamesResponse'
                '401':
                    description: Access token is missing or invalid
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UnauthorizedError'
                default:
                    description: Unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
    /games/leave/{gameId}:
        delete:
            operationId: LeaveGame
            tags:
                - game
            summary: Leave game
            security:
                - cookieAuth: []
            parameters:
              - in: path
                name: gameId
                required: true
                schema:
                    type: string
            responses:
                '200':
                    description: OK
                '401':
                    description: Access token is missing or invalid
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UnauthorizedError'
                default:
                    description: Unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
    /games/join/{gameId}:
        put:
            operationId: JoinGame
            tags:
                - game
            summary: Join game
            security:
                - cookieAuth: []
            parameters:
              - in: path
                name: gameId
                required: true
                schema:
                    type: string
            responses:
                '200':
                    description: OK
                '401':
                    description: Access token is missing or invalid
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UnauthorizedError'
                default:
                    description: Unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
components:
    securitySchemes:
        cookieAuth:
            type: apiKey
            in: cookie
            name: session

    schemas:
        # errors
        Error:
            type: object
            properties:
                error:
                    type: string

        UnauthorizedError:
            description: Access token is missing or invalid

        # types
        Credentials:
            type: object
            required:
                - name
                - password
                - email
            properties:
                name:
                    type: string
                email:
                    type: string
                password:
                    type: string
                phone:
                    type: string
        
        UserData:
            type: object
            required:
                - ELO
            properties:
                userId:
                    type: string
                username:
                    type: string
                ELO:
                    type: number

        # auth
        SignUpRequest:
            type: object
            required:
                - credentials
            properties:
                credentials:
                    $ref: '#/components/schemas/Credentials'

        SignInRequest:
            type: object
            required:
                - credentials
            properties:
                credentials:
                    $ref: '#/components/schemas/Credentials'

        SignInResponse:
            type: object
            required:
                - token
            properties:
                token:
                    type: string

        # games
        Symbol:
            type: string
            enum: [X, O]

        Winner:
            type: string
            enum: [X, O, DRAW, NONE]

        GameStatus:
            type: string
            enum: [WAITING_FOR_PLAYERS, IN_PROGRESS, FINISHED]

        GameSettings:
            type: object
            properties:
                isPrivate:
                    type: boolean
                opponentId:
                    type: string
                    nullable: true
                creatorSymbol:
                    $ref: '#/components/schemas/Symbol'

        ELOFilter:
            type: object
            properties:
                min:
                    type: number
                max:
                    type: number

        GameFilter:
            type: object
            properties:
                oPlayerId:
                    type: string
                    nullable: true
                xPlayerId:
                    type: string
                    nullable: true
                isPrivate:
                    type: boolean
                    nullable: true
                status:
                    type: object
                    nullable: true
                    allOf:
                      - $ref: '#/components/schemas/GameStatus'
                ELO:
                    type: object
                    nullable: true
                    allOf:
                      - $ref: '#/components/schemas/ELOFilter'

        Game:
            allOf:
              - $ref: '#/components/schemas/GameSettings'
              - type: object
                properties:
                    serialisedBoard:
                        type: string
                    oPlayerId:
                        type: string
                    xPlayerId:
                        type: string
                    winner:
                        $ref: '#/components/schemas/Winner'
                    status:
                        $ref: '#/components/schemas/GameStatus'

        CreateGameRequest:
            type: object
            properties:
                gameSettings:
                    type: object
                    nullable: true
                    allOf:
                      - $ref: '#/components/schemas/GameSettings'

        ListGamesResponse:
            type: object
            properties:
                games:
                    type: array
                    items:
                        $ref: '#/components/schemas/Game'
                queryCursor:
                    type: string